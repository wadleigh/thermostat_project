Thermostat Project Overview

Notes:
- run as nohup ./read_and_log_temp.py (or what ever the file name is) the nohup makes it run even if the terminal window or SSH connection gets closed.
- to kill the program: 
	- type: ps -e | grep python3 (this finds the python3 task that is running)
	- "ps -ef" lists all task that are running "|" passes that list to "grep" which searches the list for "python3", the program that is running (which is running the program I wrote)
	- this returns program ID (a number, that seems to be four digits fairly often), as the first thing, and also other stuff
	- the type: kill (the number returned as the programID from the last command)
- to sync the code over to the pi 
	- type " ./syncTo.py" in the command line in the Dev/thermostat_project/ folder on my computer
	- The command line should read: 
	"Running this command: rsync -a --delete ./ pi@raspi:~/Dev/thermostat_project/
	Lauras-MacBook-Pro:thermostat_project laurawadleigh$ ./syncTo.py "
- to let the computer know a new file is an executable type the she bang thing at the start of the 	new file and type "chmod +x control_temp.py" (with the new file name in the place of control_temp.py)
	- run it as ./"filename"




Done:
- read in temperature 
- control motor
- log temperature
- set desired temperature 
- adjust motor accordingly
- build thing to attach motor to heater

To do:
- make a schedule of what temperatures it should be at what time
- adjust the knob in a smarter way.  Maybe set up a PID loop sort of thing.
- add a motor and thermometer in the bedroom attached to something, maybe the ESP8266 wifi thing, and control the temp in there also with the pi.  This: https://maker.pro/esp8266/tutorial/how-to-program-esp8266s-onboard-gpio-pins could be helpful


Extras:
- log in weather data
- adjust setting based on weather, not just temperature 
- figure out a sleep mode so it's not running all the time (an presumably using maybe significant energy)
- figure out how to control it remotely
- learn how to most efficiently adjust the temperature.  Maybe do some machine learning thing.  At least incorporate the outside temperature. 


